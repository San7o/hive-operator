//go:build !ignore_autogenerated

/*
                    GNU GENERAL PUBLIC LICENSE
                       Version 2, June 1991

 Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.
*/

// SPDX-License-Identifier: GPL-2.0-only

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerMetadata) DeepCopyInto(out *ContainerMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerMetadata.
func (in *ContainerMetadata) DeepCopy() *ContainerMetadata {
	if in == nil {
		return nil
	}
	out := new(ContainerMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KiveAlert) DeepCopyInto(out *KiveAlert) {
	*out = *in
	out.Metadata = in.Metadata
	out.Pod = in.Pod
	out.Node = in.Node
	out.Process = in.Process
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KiveAlert.
func (in *KiveAlert) DeepCopy() *KiveAlert {
	if in == nil {
		return nil
	}
	out := new(KiveAlert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KiveAlertMetadata) DeepCopyInto(out *KiveAlertMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KiveAlertMetadata.
func (in *KiveAlertMetadata) DeepCopy() *KiveAlertMetadata {
	if in == nil {
		return nil
	}
	out := new(KiveAlertMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KiveData) DeepCopyInto(out *KiveData) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KiveData.
func (in *KiveData) DeepCopy() *KiveData {
	if in == nil {
		return nil
	}
	out := new(KiveData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KiveData) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KiveDataList) DeepCopyInto(out *KiveDataList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KiveData, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KiveDataList.
func (in *KiveDataList) DeepCopy() *KiveDataList {
	if in == nil {
		return nil
	}
	out := new(KiveDataList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KiveDataList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KiveDataSpec) DeepCopyInto(out *KiveDataSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KiveDataSpec.
func (in *KiveDataSpec) DeepCopy() *KiveDataSpec {
	if in == nil {
		return nil
	}
	out := new(KiveDataSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KivePolicy) DeepCopyInto(out *KivePolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KivePolicy.
func (in *KivePolicy) DeepCopy() *KivePolicy {
	if in == nil {
		return nil
	}
	out := new(KivePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KivePolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KivePolicyList) DeepCopyInto(out *KivePolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KivePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KivePolicyList.
func (in *KivePolicyList) DeepCopy() *KivePolicyList {
	if in == nil {
		return nil
	}
	out := new(KivePolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KivePolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KivePolicySpec) DeepCopyInto(out *KivePolicySpec) {
	*out = *in
	if in.Traps != nil {
		in, out := &in.Traps, &out.Traps
		*out = make([]KiveTrap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KivePolicySpec.
func (in *KivePolicySpec) DeepCopy() *KivePolicySpec {
	if in == nil {
		return nil
	}
	out := new(KivePolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KiveTrap) DeepCopyInto(out *KiveTrap) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MatchAny != nil {
		in, out := &in.MatchAny, &out.MatchAny
		*out = make([]KiveTrapMatch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KiveTrap.
func (in *KiveTrap) DeepCopy() *KiveTrap {
	if in == nil {
		return nil
	}
	out := new(KiveTrap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KiveTrapMatch) DeepCopyInto(out *KiveTrapMatch) {
	*out = *in
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KiveTrapMatch.
func (in *KiveTrapMatch) DeepCopy() *KiveTrapMatch {
	if in == nil {
		return nil
	}
	out := new(KiveTrapMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeMetadata) DeepCopyInto(out *NodeMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeMetadata.
func (in *NodeMetadata) DeepCopy() *NodeMetadata {
	if in == nil {
		return nil
	}
	out := new(NodeMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodMetadata) DeepCopyInto(out *PodMetadata) {
	*out = *in
	out.Container = in.Container
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodMetadata.
func (in *PodMetadata) DeepCopy() *PodMetadata {
	if in == nil {
		return nil
	}
	out := new(PodMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMetadata) DeepCopyInto(out *ProcessMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMetadata.
func (in *ProcessMetadata) DeepCopy() *ProcessMetadata {
	if in == nil {
		return nil
	}
	out := new(ProcessMetadata)
	in.DeepCopyInto(out)
	return out
}
