apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kive-k8s-operator
    control-plane: manager
  name: kivebpf-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: kivedata.kivebpf.san7o.github.io
spec:
  group: kivebpf.san7o.github.io
  names:
    kind: KiveData
    listKind: KiveDataList
    plural: kivedata
    singular: kivedata
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KiveDataSpec defines the desired state of KiveData
            properties:
              inode-no:
                description: The inode number of the file
                format: int64
                type: integer
              kernel-id:
                description: A string to uniquely identify a running kernel
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: kivepolicies.kivebpf.san7o.github.io
spec:
  group: kivebpf.san7o.github.io
  names:
    kind: KivePolicy
    listKind: KivePolicyList
    plural: kivepolicies
    singular: kivepolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              traps:
                description: List of traps
                items:
                  properties:
                    callback:
                      description: Send an HTTP POST request to this endpoint if specified
                      type: string
                    create:
                      description: Whether to create the file or not if It cannot
                        be found
                      type: boolean
                    matchAny:
                      description: Match any of the following items (logical OR)
                      items:
                        description: Match all the following optional filds (logical
                          AND)
                        properties:
                          container-name:
                            description: |-
                              Filter container by name, can be a regex with syntax described at
                              https://golang.org/s/re2syntax
                            type: string
                          ip:
                            description: Filter pods by IP
                            type: string
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: Filter pods per label
                            type: object
                          namespace:
                            description: Filter pods per namespace
                            type: string
                          pod:
                            description: Filter pod by name
                            type: string
                        type: object
                      type: array
                    mode:
                      description: The permissions of the file to be created if create
                        is set to ture
                      format: int32
                      type: integer
                    path:
                      description: Specifies which path to check
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kivebpf
  name: kivebpf-manager
  namespace: kivebpf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kivebpf
  name: kivebpf-leader-election-role
  namespace: kivebpf-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kivebpf
  name: kivebpf-kive-editor-role
rules:
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kives
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kives/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kivebpf
  name: kivebpf-kive-viewer-role
rules:
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kives
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kives/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kivebpf
  name: kivebpf-kivedata-editor-role
rules:
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kivedata
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kivedata/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kivebpf
  name: kivebpf-kivedata-viewer-role
rules:
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kivedata
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kivedata/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kivebpf-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - deployments/status
  - pods/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kivedata
  - kivepolicies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kivedata/finalizers
  - kivepolicies/finalizers
  verbs:
  - update
- apiGroups:
  - kivebpf.san7o.github.io
  resources:
  - kivedata/status
  - kivepolicies/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kivebpf-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kivebpf-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kivebpf
  name: kivebpf-leader-election-rolebinding
  namespace: kivebpf-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kivebpf-leader-election-role
subjects:
- kind: ServiceAccount
  name: kivebpf-manager
  namespace: kivebpf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kivebpf
  name: kivebpf-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kivebpf-manager-role
subjects:
- kind: ServiceAccount
  name: kivebpf-manager
  namespace: kivebpf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kivebpf-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kivebpf-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: kivebpf-manager
  namespace: kivebpf-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kivebpf
    control-plane: manager
  name: kivebpf-manager-metrics-service
  namespace: kivebpf-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: manager
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kivebpf
    control-plane: manager
  name: kivebpf-manager
  namespace: kivebpf-system
spec:
  selector:
    matchLabels:
      control-plane: manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: manager
    spec:
      containers:
      - args:
        - --kive-policy-health-probe-bind-address=:8081
        - --kive-data-health-probe-bind-address=:8082
        - --kive-pod-health-probe-bind-address=:8083
        command:
        - /manager
        image: localhost:5001/kive-k8s-operator:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: kive-k8s-operator
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          privileged: true
          runAsNonRoot: false
        volumeMounts:
        - mountPath: /run/containerd/containerd.sock
          name: containerd-sock
          readOnly: false
        - mountPath: /host/proc
          name: proc
          readOnly: true
        - mountPath: /host/real/proc
          name: realproc
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kivebpf-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /run/containerd/containerd.sock
          type: Socket
        name: containerd-sock
      - hostPath:
          path: /proc
          type: Directory
        name: proc
      - hostPath:
          path: /host/real/proc
          type: Directory
        name: realproc
